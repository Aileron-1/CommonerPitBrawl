<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayerRaw</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;

animSpd = 10;

clientID = 0;

playerName = "undefined";

xx = 0;
yy = 0;

socketID = -1;
entityID = -1;

// HP
hp = 6;
maxHp = 6;

// Actions
movement = 0; // placeholder
action[0] = 0;  // action
action[1] = 0;  // bonus action
action[2] = 0;  // free action
action[3] = 0;  // reaction

// Action list
actions = ds_list_create();
bonusActions = ds_list_create();
freeActions = ds_list_create();/*
ds_list_add(actions, "Attack","Dash","Dodge");
ds_list_add(bonusActions, "Test");
ds_list_add(freeActions, "Test2");*/

                                // DON'T FORGET REACTION LIST TOO

initiative = 0;
movement = 0;
die = 0;

spawnEffect = 1;

mov = 0;
moveType = 0;  // 0 = teleport, 1 = "slide"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = 0-y-64;

pos = ToIsometric(xx,yy);
mov_x = global.gridX + pos[0];
mov_y = global.gridY + pos[1];

if (moveType == 0) {
    x = mov_x;
    y = mov_y;
    speed = 0;
    //effect_create_above(ef_ring, x, y, 1, c_yellow);
    moveType = -1;
}

// Move towards
if (moveType == 1) {
    direction = point_direction(x,y,mov_x,mov_y);
    if (point_distance(x,y,mov_x,mov_y) &gt; animSpd) {
        speed = animSpd;
    }
    else if (point_distance(x,y,mov_x,mov_y) &lt;= animSpd) {
        x = mov_x;
        y = mov_y;
        speed = 0;
        moveType = -1;
    }
}

// die 
if (die == 1) {
    effect_create_above(ef_firework, x, y-20, 1, c_blue);
    die = 2;
}

// spawneffect
// also has the effect of instant move
if (spawnEffect == 1) {

    x = mov_x;
    y = mov_y;
    effect_create_above(ef_ring, x, y, 1, c_yellow);
    spawnEffect = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

lx = x;
ly = y-10;

label = playerName;//+" "+string(hp)+"/"+string(maxHp);
label2 = string(hp)+"/"+string(maxHp);

draw_set_color(c_black);
draw_set_font(fontSmall);
len = string_width(label);
lenH = 13;//string_height(label);
rectHeight = 4;
sidePadding = 20;
healthAmount = (real(hp)/real(maxHp))*100;
draw_healthbar(lx-sidePadding, ly-rectHeight, lx+sidePadding, ly+rectHeight,healthAmount, c_black, c_red, c_green, 0, true, true)
//draw_rectangle(x-(len/2)-sidePadding, y-rectHeight+lenH, x+(len/2)+sidePadding, y+rectHeight+lenH,0);


draw_set_alpha(0.5);
len = string_width(label);
rectHeight = 6;
sidePadding = 5;
draw_rectangle(lx-(len/2)-sidePadding, ly-rectHeight+lenH, lx+(len/2)+sidePadding, ly+rectHeight+lenH,0);
draw_set_alpha(1);

draw_set_valign(fa_middle);
draw_set_halign(fa_center);
draw_set_color(c_white);
draw_text(lx,ly+lenH,label);
draw_set_font(fontSmall);
draw_text(lx,ly,label2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
