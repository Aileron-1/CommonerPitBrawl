<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>items = ds_list_create(); // log items
//ds_list_add(items, 'Test log 1', 'Test log 2. Long. Long. Long. Long. Long. Long.');
wrappedItems = ds_list_create();  // After text wrap

width = 180;
height = 0;
leftMargin = 6;
topMargin = 6;
xPad = 3;
yPad = 1;
//itemHeight = 12;
itemGap = 1;

itemLimit = 4;

logTextProperty = textProperty(fontLog, c_white, 1, fa_left, fa_top);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// Wrap text into list, to draw
ds_list_clear(wrappedItems);
height = 0;
SetTextProperty(logTextProperty);
for (var i=min(ds_list_size(items), itemLimit)-1; i&gt;=0; i--) {
    var wrap = items[|i]//TextWrap(width-xPad*2, items[|i]);
    ds_list_add(wrappedItems, wrap);
    height += string_height(wrap)+itemGap;
}
height += yPad*2//-itemGap; 

xx = x+leftMargin;
yy = y+topMargin;
//height = min(ds_list_size(items), 4)*itemHeight+yPad*2;  // temp. account for newline later

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(0.5);
draw_set_color(c_dkgray);
draw_rectangle(xx,yy,xx+width,yy+height,0);
draw_set_alpha(1);

var minVal = 0.5;
var maxVal = 1;
var yOffset = 0;
SetTextProperty(logTextProperty);
//draw_text(xx, yy, height);
for (var i=ds_list_size(wrappedItems)-1; i&gt;=0; i--) {
    // Fade out for higher texts
    draw_set_alpha(minVal + (maxVal-minVal)/ds_list_size(wrappedItems)*i);
    // Draw text
    var item = wrappedItems[|i];
    yOffset = i*(string_height(item)+itemGap);
    draw_text(xx+xPad,yy+yPad+yOffset, item);
}
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
