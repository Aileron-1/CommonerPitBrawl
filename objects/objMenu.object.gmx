<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTitle2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>button_host = CreateButton(id, room_width/2, room_height-130-90-2, "Host", "host");
button_join = CreateButton(id, room_width/2, room_height-65-90-2, "Join", "join");
button_character = CreateButton(id, room_width/2, room_height-90-2, "Edit#Commoner", "character");
buttonListen = "";
/*
global.PlayerName = "Bob";

if (variable_global_exists("NewPlayerName")) {
    show_debug_message("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Exist")
    global.PlayerName = global.NewPlayerName;
}*/

global.Server = -1;
global.connectip = "127.0.0.1";
global.InitObject = id;
global.haveserver = false;
global.ServerType = network_socket_tcp;
global.entityCount = 0;

global.listzero = ds_list_create();     // we dont want to use index 0! (maps return 0 on error)
global.mapzero = ds_map_create();       // we dont want to use index 0! (maps return 0 on error)
global.serverlist = ds_list_create();
global.servernames = ds_list_create();

// Create a server and listen on our broadcast port....
//global.broadcast_server = network_create_server( network_socket_udp, 6511, 100 );

x = room_width/2;
y = 24;
image_speed = 0.2;

reflectTimer = 50;

if (!instance_exists(objCharacter)) {
    global.character = instance_create(0,0,objCharacter);
}

randomize();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (buttonListen) {
case "host": 
    /// Start game - local client+server
    global.Server = instance_create(0,0,objServer);
    if( global.haveserver == false ){
        show_debug_message("Error, can't create server");
    }else{
        global.connectip="127.0.0.1";
        show_debug_message("#######################################");
        show_debug_message("Start game");
        show_debug_message("#######################################");
        room_goto(rmBattle);
    }
    buttonListen = "";
    break;
    
case "join": 
    room_goto(rmJoin);
    buttonListen = "";
    break;

case "character": 
    room_goto(rmCharacter);
    buttonListen = "";
    break;

}

reflectTimer -= 1;
if (reflectTimer &lt;= 0) {
    instance_create(0,0,objTitleReflect);
    reflectTimer = 120;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="63">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
var i_d = ds_map_find_value(async_load, "id");
if i_d == msg {
    if ds_map_find_value(async_load, "status") {
        if ds_map_find_value(async_load, "result") != "" {
            PlayerName = ds_map_find_value(async_load, "result");
        }
    }
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

draw_set_valign(fa_bottom);
draw_set_halign(fa_left);
draw_set_font(font6);
if (instance_exists(objCharacter)) {
    draw_text(10,room_height-10,"Name: " + objCharacter.name);
}
//draw_sprite(sprTitle,0,room_width/2,24);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
